<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>at.fhhgb.mc</groupId>
	<artifactId>archivist</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>archivist</name>
	<description>
		The goal of Archivist is to provide an easy-to-use digital repository for musical societies and brass bands.
		Therefore, an archivist can manage a repository of musical pieces and store the corresponding musical scores.
		This approach also allows you to have a simple overview of musical pieces, search for them and as a result
		print them out easily on paper.
	</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
		<relativePath/>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<!-- Project dependencies (using wildfly-10.1.0.Final) -->
	<dependencies>
	
		<!-- Spring framework -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		

		<!-- Java Servlet API (provided by wildfly) -->
		<dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <!--<version>3.1.0</version>-->
            <scope>provided</scope>
        </dependency>
		
		
		<!-- MySQL -->
		<dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        
		
		<!-- JPA -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
		        <exclusion>
		            <groupId>dom4j</groupId>
		            <artifactId>dom4j</artifactId>
		        </exclusion>
		    </exclusions>
        </dependency>
        
        
        <!-- DOM4J (provided by wildfly) -->
        <dependency>
		   <groupId>dom4j</groupId>
		   <artifactId>dom4j</artifactId>
		   <scope>provided</scope>
		</dependency>
		
	</dependencies>
	
	<!-- Build properties -->
	<build>
		<!-- Final display name -->
		<finalName>archivist</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>